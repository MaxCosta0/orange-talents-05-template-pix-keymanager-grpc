syntax = "proto3";

option java_multiple_files = true;
option java_package = "br.com.zupacademy.maxley";
option java_outer_classname = "KeyManager";
option objc_class_prefix = "HLW";

package br.com.zupacademy.maxley;

import "google/protobuf/timestamp.proto";

service KeyManagerService {
  rpc registra (RegistraChavePixRequest) returns (RegistraChavePixResponse) {}
}

service KeyManagerRemoveGrpcService {
  rpc remove (RemoveChavePixRequest) returns (RemoveChavePixResponse) {}
}

service KeyManagerConsultaGrpcService{
  rpc consulta (ConsultaChavePixRequest) returns (ConsultaChavePixResponse) {}
}

service KeyManagerListaGrpcSErvice {
  rpc lista (ListaChavePixRequest) returns (ListaChavePixResponse) {}
}

service Health {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);

  rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
}

enum TipoDeChave {
  UNKNOWN_TIPO_CHAVE = 0;
  CPF = 1;
  CELULAR = 2;
  EMAIL = 3;
  ALEATORIA = 4;
}

enum TipoDeConta {
  UNKNOWN_TIPO_CONTA = 0;
  CONTA_CORRENTE = 1;
  CONTA_POUPANCA = 2;
}

message RegistraChavePixRequest {
  string clientId = 1;
  TipoDeChave tipoDeChave = 2;
  string chave = 3;
  TipoDeConta tipoDeConta = 4;
}

message RegistraChavePixResponse {
  string clienteId = 1;
  string pixId = 2;
}

message RemoveChavePixRequest {
  string pixId = 1;
  string clienteId = 2;
}

message RemoveChavePixResponse {
  string chave = 1;
}

message ConsultaChavePixRequest {
  message FiltroPorPixId{
    string pixId = 1;
    string clientId = 2;
  }

  oneof filtro {
    FiltroPorPixId pixId = 1;
    string chave = 2;
  }
}

message ConsultaChavePixResponse {
  message ChavePix {

    message ContaInfo {
      TipoDeConta tipo     = 1;
      string instituicao   = 2;
      string nomeDoTitular = 3;
      string cpfDoTitular  = 4;
      string agencia       = 5;
      string numeroDaConta = 6;
    }

    TipoDeChave tipo        = 1;
    string chave            = 2;
    ContaInfo conta         = 3;
    google.protobuf.Timestamp criadaEm = 4;
  }

  string clienteId = 1;
  string pixId     = 2;
  ChavePix chave   = 3;
}

message ListaChavePixRequest{
  string clientId = 1;
}

message ListaChavePixResponse{

  message ChavePixResponse{
    string pixId = 1;
    string clientId = 2;
    TipoDeChave tipoDeChave = 3;
    string chave = 4;
    TipoDeConta tipoDeConta = 5;
    google.protobuf.Timestamp criadaEm = 6;
  }

  repeated ChavePixResponse ChavesPix = 1;
}

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
}